theory Cas4
  imports Main 

begin

lemma 
  "(p \<or> q) \<and> r \<longrightarrow> (p \<and> r) \<or> (q \<and> r)"
  apply (rule impI)
  apply (erule conjE)
  (* moramo da dokazemo i u jednom i u drugom slucaju *)
  apply (erule disjE)
   apply (rule disjI1)
   apply (rule conjI)
    apply assumption
   apply assumption
  apply (rule disjI2)
  apply (rule conjI)  
   apply assumption
  apply assumption
  done 


lemma "\<not> (A \<and> B) \<longrightarrow> \<not> A \<or> \<not> B"
  apply (rule impI)
  apply (rule ccontr) (* kontradikcija, prebacuje mi na levu stranu *)
  apply (erule notE)
  apply (rule conjI)
   apply (rule ccontr)
  apply (erule notE)
   apply (rule disjI1)
   apply assumption
  apply (rule ccontr)
  apply (erule notE)
  apply (rule disjI2)
  apply assumption
  done

(*
lemma "(\<forall> x. P x \<and> Q x) \<longrightarrow> (\<forall> x. P x) \<and> (\<forall> x. Q x)"
  apply (rule impI)
  apply (rule conjI)
   apply (rule allI)
   apply (erule_tac x="y" in allE)
   apply (erule conjE)
   apply assumption 
   apply (rule allI)
  apply (erule_tac x="z" in allE)
   apply (erule conjE)
   apply assumption 
  done 
*)

lemma "(\<exists> x. P x \<or> Q x) \<longrightarrow> (\<exists> y. P y) \<or> (\<exists> z. Q z)"
  apply (rule impI)
  apply (erule exE)
  apply (erule disjE) (* ne smemo o x-u da znamo nista dodatno *)
   apply (rule disjI1)
   apply (rule_tac x="x" in exI)
   apply assumption
  apply (rule disjI2)
  apply (rule_tac x="x" in exI)
  apply assumption  
  done 

(*
 TEOREMA O SREDNJIJ VREDNOSTI

LAGRANZ:
  [a, b] 
\<exists> c \<in> [a, b] . f'(c) = (f(b) - f(a)) / (b - a)

KOSIJEVA TEOREMA:
[a, b], f, g

\<exists> c \<in> [a, b]. f'(c) / g'(c) = (f(b) - f(a)) / (g(b) - g(a))

f'(c) = (f(b) - f(a)) / (b - a)
g'(c1) = (g(b) - g(a)) / (b - a)

ovo vazi za bilo koje c, ne znamo da li su bas ta dva c ekvivalentna

*)

lemma "\<not> (\<exists> x. P x) \<longrightarrow> (\<forall> x. \<not> P x)"
  apply (rule impI)
  apply (rule allI)
  apply (rule notI)
  apply (erule notE)
  apply (rule_tac x="x" in exI)
  apply assumption
  done

lemma "\<not> (\<forall> x. P x) \<longrightarrow> (\<exists> x. \<not> P x)"
  apply (rule impI)
  apply (rule ccontr)
  apply (erule notE)
  apply (rule allI)
  apply (rule ccontr)
  apply (erule notE)
  apply (rule_tac x="x" in exI)
  apply assumption 
  done 

(* izrazavanje dokazivanja kroz strukturu *)


lemma 
  "A \<inter> B \<subseteq> A \<union> B"
  (*find_theorems "_ \<Longrightarrow> _ \<in> _ \<Longrightarrow> _ \<subseteq> _"*)
  (*find_theorems name: subset*)
  apply (rule subsetI)
  apply (erule IntE)
  apply (rule UnI1)
  apply assumption 

(* zapis citljivih dokaza: *)

lemma 
  "A \<inter> B \<subseteq> A \<union> B" 
(*uvek pronadje tacno jedno pravilo*)
proof (rule subsetI)
  fix x 
  assume *: "x \<in> A \<inter> B" 

(*  from \<open>x \<in> A \<inter> B\<close> have "x \<in> A"
    by auto
*)

(*  have "x \<in> A"
    using \<open>x \<in> A \<inter> B\<close> 
    by auto 
*)

  (*have "x \<in> A"
    using * 
    by auto 
*)

(*
  from this have "x \<in> A"
    by auto 
*)

  then have "x \<in> A"
    by auto 

  from this show "x \<in> A \<union> B"
    by auto
(*
  show "x \<in> A \<union> B"
    sorry
*)
qed

lemma 
  "- (A \<inter> B) = -A \<union> -B" (is "?lhs = ?rhs")
proof
  show  "- (A \<inter> B) \<subseteq> - A \<union> - B"
  proof
    fix x
    assume "x \<in> - (A \<inter> B)"

    then have "x \<notin> A \<or> x \<notin> B" 
      by auto 

    then have "x \<in> -A \<or> x \<in> -B"
      by auto 

    then show "x \<in> -A \<union> -B"
    proof
      assume "x \<in> -A"
      then show "x \<in> -A \<union> -B"
        by auto

    next 
      assume "x \<in> -B"
      then show "x \<in> -A \<union> -B"
        by auto
    qed 
  qed 

next 
  show "- A \<union> - B \<subseteq> - (A \<inter> B)"
  proof
    fix x 
    assume "x \<in> -A \<union> -B"

    show "x \<in> - (A \<inter> B)"
    proof
      assume "x \<in> A \<inter> B"
      then have "x \<in> A \<and> x \<in> B"
        by auto 

      from \<open>x \<in> -A \<union> -B\<close> show False
      proof
        assume "x \<in> -A"
        (*then show False 
          using \<open>x \<in> A\<close>
          by auto*) 

        with \<open>x \<in> A\<close> show False
          by auto

      next 
        assume "x \<in> -B"
        show False 
          assume "x \<in> - B"
          with \<open>x \<in> B\<close> show False 
            by auto 
        qed
    qed 
  qed 
qed


lemma 
  assumes "A \<subseteq> B"
  shows "f ` A \<subseteq> f ` B"
proof 
  fix x 
  assume "y \<in> f ` A " (*y je slika*)
  then have "\<exists> x \<in> A. f x = y"
    by auto 

  then obtain x where "x \<in> A" "f x = y"
    by auto 

  from \<open>x \<in> A\<close> have "x \<in> B"
    using \<open>A \<subseteq> B\<close>
    by auto 

  with \<open>f x = y\<close> show "y \<in> f ` B"
    by auto 

qed 


end 